"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../utils/util");
const api_1 = require("../../utils/api");
Page({
    data: {
        ready: false,
        DTUs: [],
        dtuItem: [],
        state: '',
        alarm: '',
        alarmNum: 0,
        alarmData: [],
        Vm: [],
        confirm: false,
        sub: false
    },
    devPics: {
        "UPS": '/assert/ups.png',
        "温湿度": '/assert/th.png',
        "电量仪": '/assert/em.png',
        "空调": '/assert/air.png'
    },
    onLoad(query) {
        wx.showLoading({ title: 'loading' });
        wx.login({
            success: async (login) => {
                const { code, data } = await api_1.default.login({ js_code: login.code, scene: query.scene ? decodeURIComponent(query.scene) : '' });
                if (code) {
                    const user = await api_1.default.userInfo();
                    wx.hideLoading();
                    switch (user.data.userGroup) {
                        case "admin":
                        case "root":
                            wx.reLaunch({ url: "/pages/admin/index" });
                            break;
                        default:
                            this.setData({ ready: true, sub: Boolean(user.data.wxId) });
                            this.start();
                            break;
                    }
                }
                else {
                    wx.hideLoading();
                    wx.reLaunch({ url: "/pages/login/login?openid=" + data.openid + "&unionid=" + data.unionid });
                }
            }
        });
    },
    start() {
        this.bindDev();
        api_1.default.onMessage('MacUpdate', (mac) => {
            console.log(`listen MacUpdate,mac:${mac}`);
            this.bindDev();
        });
    },
    async subMessage() {
        const url = encodeURIComponent('http://mp.weixin.qq.com/s?__biz=MjM5MjA1MTgxOQ==&mid=304819939&idx=1&sn=d0bcd922033075afa2b5219fc95ebb1e&chksm=3173a9e7060420f1a98d0040d964a2f82af25289a731d1400c5224ca9bb3d225d737700700a8#rd');
        wx.navigateTo({ url: '/pages/index/web/web?url=' + url });
    },
    async bindDev() {
        wx.showLoading({ title: '获取DTU' });
        const { code, data } = await api_1.default.BindDev();
        wx.hideLoading();
        wx.stopPullDownRefresh();
        if (code) {
            if (data.UTs.length === 0) {
                this.setData({
                    DTUs: [],
                    dtuItem: []
                });
                if (!this.data.confirm) {
                    wx.showModal({
                        title: '添加设备',
                        content: '您还没有任何设备，是否添加设备?',
                        success: (res) => {
                            if (res.confirm) {
                                wx.navigateTo({
                                    url: '/pages/index/bindDev/bindDev'
                                });
                            }
                            else {
                                this.setData({
                                    confirm: true
                                });
                            }
                        }
                    });
                }
            }
            else {
                this.sortDevs(data.UTs);
                api_1.default.getAlarmunconfirmed().then(({ data: len }) => {
                    if (Number(len) > 0) {
                        this.setData({
                            alarm: `有${len}条未确认的告警信息，点击查看?`,
                            alarmNum: Number(len)
                        });
                    }
                    else {
                        this.setData({
                            alarm: ``,
                            alarmNum: Number(len),
                            alarmData: []
                        });
                    }
                });
            }
        }
    },
    sortDevs(UTs) {
        wx.setStorage({
            key: 'Uts',
            data: UTs
        });
        this.countDev(UTs);
        const devs = UTs.map(dtu => {
            return dtu.mountDevs.map(dev => ({ ...dev, pic: this.devPics[dev.Type], dtu: dtu.name, online: dev.online && dtu.online }));
        }).flat();
        this.setData({
            DTUs: UTs,
            dtuItem: devs
        });
    },
    toDev(event) {
        const { DevMac } = event.currentTarget.dataset.item;
        wx.navigateTo({
            url: '/pages/index/dtu/dtu' + (0, util_1.ObjectToStrquery)({ mac: DevMac })
        });
    },
    showMountDevData(event) {
        const { pid, mountDev, protocol, dtu, Type } = event.currentTarget.dataset.item;
        const { DevMac } = this.data.DTUs.find(el => el.name === dtu);
        wx.navigateTo({
            url: '/pages/index/devs/devs' + (0, util_1.ObjectToStrquery)({ pid: String(pid), mountDev, protocol, DevMac, Type })
        });
    },
    seeAlarm() {
        wx.switchTab({ url: '/pages/index/alarm/alarm?num=' + this.data.alarmNum });
    },
    countDev(terminals) {
        const terminal_all = terminals.length;
        const terminal_on = terminals.map(el => el.online).filter(el => el).length;
        const monutDev_all = terminals.map(el => el.mountDevs.length).reduce((pre, cur) => pre + cur);
        const mountDev_on = terminals.map(el => el.mountDevs.filter(el2 => el2.online)).reduce((pre, cur) => [...pre, ...cur]).length;
        const state = `DTU:(全部${terminal_all}/在线${terminal_on}),挂载设备:(全部${monutDev_all}/在线${mountDev_on})`;
        this.setData({
            state
        });
    },
    async onPullDownRefresh() {
        await this.bindDev();
        this.countDev(this.data.DTUs);
        this.start();
        wx.stopPullDownRefresh();
    },
    bindload(event) {
        console.log(`公众号加载success,状态:${event.detail.errMsg}`);
    },
    binderror(event) {
        console.log(`公众号加载error,状态:${event.detail.errMsg}`);
    },
    async addVm() {
        const { ok, arg } = await api_1.default.addVm();
        if (ok) {
            this.setData({
                Vm: arg
            });
            this.sortDevs(arg);
        }
    },
    onShow() {
        if (this.data.ready) {
            this.bindDev();
        }
    }
});
//# sourceMappingURL=data:application/json;base64,