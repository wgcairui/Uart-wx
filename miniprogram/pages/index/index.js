"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../utils/util");
const api_1 = require("../../utils/api");
Page({
    data: {
        ready: false,
        DTUs: [],
        devTypes: [],
        dtuItem: [],
        state: '',
        alarm: '',
        alarmNum: 0,
        alarmData: [],
        Vm: []
    },
    devPics: {
        "UPS": '/assert/ups.png',
        "温湿度": '/assert/th.png',
        "电量仪": '/assert/em.png',
        "空调": '/assert/air.png'
    },
    onLoad() {
        wx.showLoading({ title: '加载中' });
        wx.login({
            success: async (login) => {
                const res = await api_1.default.login({ js_code: login.code });
                wx.hideLoading();
                if (res.ok) {
                    switch (res.arg.userGroup) {
                        case "user":
                            this.setData({ ready: true });
                            this.start();
                            break;
                        case "admin":
                            wx.reLaunch({ url: "/pages/admin/index" });
                            break;
                        default:
                            wx.showModal({
                                title: '用户组错误',
                                content: '只有用户组user和admin可以使用小程序端',
                                success() {
                                    api_1.default.unbindwx().then(() => {
                                        wx.startPullDownRefresh();
                                    });
                                }
                            });
                            break;
                    }
                }
                else
                    wx.reLaunch({ url: "/pages/login/login?openid=" + res.arg.openid });
            }
        });
    },
    tabChange(e) {
        const type = e.detail.title;
        this.selectTab(type);
    },
    selectTab(type = "全部") {
        const devs = this.data.DTUs.map(dtu => {
            return dtu.mountDevs.map(dev => {
                dev.online = dev.online && dtu.online;
                dev.pic = this.devPics[dev.Type];
                dev.dtu = dtu.name;
                return dev;
            });
        }).flat();
        switch (type) {
            case "全部":
                this.setData({
                    dtuItem: devs
                });
                break;
            default:
                this.setData({
                    dtuItem: devs.filter(el => el.dtu === type)
                });
                break;
        }
    },
    start() {
        this.bindDev();
        api_1.default.getAlarmunconfirmed().then(el => {
            const { len, alarm } = el.arg;
            if (Number(len) > 0) {
                this.setData({
                    alarm: `有${len}条未确认的告警信息，点击查看?`,
                    alarmNum: Number(len),
                    alarmData: alarm.map(el => {
                        el.time = util_1.parseTime(el.timeStamp);
                        return el;
                    })
                });
            }
            else {
                this.setData({
                    alarm: ``,
                    alarmNum: Number(len),
                    alarmData: []
                });
            }
        });
    },
    async bindDev() {
        wx.showLoading({ title: '获取DTU' });
        const { ok, arg } = await api_1.default.getuserMountDev();
        wx.hideLoading();
        wx.stopPullDownRefresh();
        if (ok && arg?.UTs && arg.UTs.length > 0) {
            this.sortDevs(arg.UTs);
        }
        else {
            const res = await wx.showModal({
                title: '添加设备',
                content: '您还没有添加任何设备，请先添加设备'
            });
            if (res.confirm) {
                wx.navigateTo({
                    url: '/pages/index/bindDev/bindDev',
                    events: {
                        addSuccess() {
                            wx.nextTick(() => {
                                setTimeout(() => {
                                    wx.startPullDownRefresh();
                                }, 500);
                            });
                        }
                    }
                });
            }
            else {
                this.addVm();
            }
        }
    },
    sortDevs(UTs) {
        const devTypes = new Set();
        UTs.forEach(el => {
            devTypes.add(el.name);
            wx.setStorage({
                key: el._id,
                data: el
            });
        });
        wx.setStorage({
            key: 'Uts',
            data: UTs
        });
        this.countDev(UTs);
        this.setData({
            DTUs: UTs,
            devTypes: [...devTypes].sort()
        });
        this.selectTab();
    },
    showMountDevData(event) {
        const { pid, mountDev, protocol, dtu, Type } = event.currentTarget.dataset.item;
        const { DevMac } = this.data.DTUs.find(el => el.name === dtu);
        wx.navigateTo({
            url: '/pages/index/devs/devs' + util_1.ObjectToStrquery({ pid: String(pid), mountDev, protocol, DevMac, Type })
        });
    },
    seeAlarm() {
        wx.switchTab({ url: '/pages/index/alarm/alarm?num=' + this.data.alarmNum });
    },
    countDev(terminals) {
        const terminal_all = terminals.length;
        const terminal_on = terminals.map(el => el.online).filter(el => el).length;
        const monutDev_all = terminals.map(el => el.mountDevs.length).reduce((pre, cur) => pre + cur);
        const mountDev_on = terminals.map(el => el.mountDevs.filter(el2 => el2.online)).reduce((pre, cur) => [...pre, ...cur]).length;
        const state = `DTU:(全部${terminal_all}/在线${terminal_on}),挂载设备:(全部${monutDev_all}/在线${mountDev_on})`;
        this.setData({
            state
        });
    },
    async onPullDownRefresh() {
        await this.bindDev();
        this.countDev(this.data.DTUs);
        this.start();
        wx.stopPullDownRefresh();
    },
    bindload(event) {
        console.log(`公众号加载success,状态:${event.detail.errMsg}`);
    },
    binderror(event) {
        console.log(`公众号加载error,状态:${event.detail.errMsg}`);
    },
    async addVm() {
        const { ok, arg } = await api_1.default.addVm();
        if (ok) {
            this.setData({
                Vm: arg
            });
            this.sortDevs(arg);
        }
    }
});
//# sourceMappingURL=data:application/json;base64,