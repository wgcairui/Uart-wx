"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const api_1 = require("../../../utils/api");
const util_1 = require("../../../utils/util");
Page({
    data: {
        option: {
            dimensions: [],
            source: []
        },
        datatime: '',
        name: '',
        mac: '',
        pid: '',
        dateShow: false,
        minDate: new Date(2020, 0, 1).getTime(),
        maxDate: Date.now(),
        webSrc: ''
    },
    onLoad: function (options) {
        const { name, mac, pid } = options;
        const p = (0, util_1.ObjectToStrquery)({
            token: api_1.default.token,
            mac,
            pid,
            name,
        });
        const webSrc = encodeURI(`https://uart.ladishb.com/wline${p}`);
        console.log(webSrc);
        this.setData({
            mac,
            pid,
            name,
            webSrc
        });
    },
    load(event) {
        console.log(event);
    },
    error(event) {
        console.log(event);
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0Q0FBcUM7QUFDckMsOENBQXVEO0FBR3ZELElBQUksQ0FBQztJQUlILElBQUksRUFBRTtRQUNKLE1BQU0sRUFBRTtZQUNOLFVBQVUsRUFBRSxFQUFFO1lBQ2QsTUFBTSxFQUFFLEVBQUU7U0FDWDtRQUNELFFBQVEsRUFBRSxFQUFFO1FBQ1osSUFBSSxFQUFFLEVBQUU7UUFDUixHQUFHLEVBQUUsRUFBRTtRQUNQLEdBQUcsRUFBRSxFQUFFO1FBRVAsUUFBUSxFQUFFLEtBQUs7UUFDZixPQUFPLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUU7UUFDdkMsT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUU7UUFDbkIsTUFBTSxFQUFFLEVBQUU7S0FDWDtJQU1ELE1BQU0sRUFBRSxVQUFVLE9BQTBEO1FBQzFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLE9BQU8sQ0FBQTtRQWFsQyxNQUFNLENBQUMsR0FBRyxJQUFBLHVCQUFnQixFQUFDO1lBQ3pCLEtBQUssRUFBRSxhQUFHLENBQUMsS0FBSztZQUNoQixHQUFHO1lBQ0gsR0FBRztZQUNILElBQUk7U0FDTCxDQUFDLENBQUE7UUFDRixNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsaUNBQWlDLENBQUMsRUFBRSxDQUFDLENBQUE7UUFDOUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVwQixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsR0FBRztZQUNILEdBQUc7WUFDSCxJQUFJO1lBQ0osTUFBTTtTQUNQLENBQUMsQ0FBQTtJQUtKLENBQUM7SUFDRCxJQUFJLENBQUMsS0FBZ0I7UUFDbkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVyQixDQUFDO0lBQ0QsS0FBSyxDQUFDLEtBQWdCO1FBQ3BCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckIsQ0FBQztDQStDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBpIGZyb20gXCIuLi8uLi8uLi91dGlscy9hcGlcIjtcbmltcG9ydCB7IE9iamVjdFRvU3RycXVlcnkgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvdXRpbFwiO1xuXG4vLyBtaW5pcHJvZ3JhbS9wYWdlcy9pbmRleC9saW5lL2xpbmUuanNcblBhZ2Uoe1xuICAvKipcbiAgICog6aG16Z2i55qE5Yid5aeL5pWw5o2uXG4gICAqL1xuICBkYXRhOiB7XG4gICAgb3B0aW9uOiB7XG4gICAgICBkaW1lbnNpb25zOiBbXSxcbiAgICAgIHNvdXJjZTogW11cbiAgICB9LFxuICAgIGRhdGF0aW1lOiAnJyxcbiAgICBuYW1lOiAnJyxcbiAgICBtYWM6ICcnLFxuICAgIHBpZDogJycsXG4gICAgLy9cbiAgICBkYXRlU2hvdzogZmFsc2UsXG4gICAgbWluRGF0ZTogbmV3IERhdGUoMjAyMCwgMCwgMSkuZ2V0VGltZSgpLFxuICAgIG1heERhdGU6IERhdGUubm93KCksXG4gICAgd2ViU3JjOiAnJ1xuICB9LFxuXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yqg6L29XG4gICAqL1xuICBvbkxvYWQ6IGZ1bmN0aW9uIChvcHRpb25zOiB7IG5hbWU6IGFueTsgbWFjOiBhbnk7IHBpZDogYW55OyBwcm90b2NvbDogYW55OyB9KSB7XG4gICAgY29uc3QgeyBuYW1lLCBtYWMsIHBpZCB9ID0gb3B0aW9uc1xuICAgIC8vIGNvbnNvbGUubG9nKG9wdGlvbnMpO1xuICAgIC8vIGNvbnN0IHRva2VuID0gYXBpLnRva2VuXG4gICAgLyogY29uc3QgcCA9IE9iamVjdFRvU3RycXVlcnkoe1xuICAgICAgdG9rZW46IGFwaS50b2tlbixcbiAgICAgIERldk1hYzogbWFjLFxuICAgICAgcGlkLFxuICAgICAgbmFtZSxcbiAgICAgIHByb3RvY29sLFxuICAgICAgdHlwZTogJ3d4J1xuICAgIH0pICovXG4gICAgLy9jb25zdCB3ZWJTcmMgPSBlbmNvZGVVUkkoYGh0dHBzOi8vdWFydC5sYWRpc2hiLmNvbS9tYWluL2xpbmU/JHtwfWApXG5cbiAgICBjb25zdCBwID0gT2JqZWN0VG9TdHJxdWVyeSh7XG4gICAgICB0b2tlbjogYXBpLnRva2VuLFxuICAgICAgbWFjLFxuICAgICAgcGlkLFxuICAgICAgbmFtZSxcbiAgICB9KVxuICAgIGNvbnN0IHdlYlNyYyA9IGVuY29kZVVSSShgaHR0cHM6Ly91YXJ0LmxhZGlzaGIuY29tL3dsaW5lJHtwfWApXG4gICAgY29uc29sZS5sb2cod2ViU3JjKTtcblxuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBtYWMsXG4gICAgICBwaWQsXG4gICAgICBuYW1lLFxuICAgICAgd2ViU3JjXG4gICAgfSlcbiAgICAvKiB0aGlzLmdldERldnNIaXN0b3J5SW5mbygpXG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIGRhdGF0aW1lOiB0aGlzLmZvcm1hdERhdGUobmV3IERhdGUoKSlcbiAgICB9KSAqL1xuICB9LFxuICBsb2FkKGV2ZW50OiB2YW50RXZlbnQpIHtcbiAgICBjb25zb2xlLmxvZyhldmVudCk7XG5cbiAgfSxcbiAgZXJyb3IoZXZlbnQ6IHZhbnRFdmVudCkge1xuICAgIGNvbnNvbGUubG9nKGV2ZW50KTtcbiAgfSxcbiAgLyogYXN5bmMgZ2V0RGV2c0hpc3RvcnlJbmZvKCkge1xuICAgIGNvbnN0IHsgbmFtZSwgbWFjLCBwaWQsIGRhdGF0aW1lIH0gPSB0aGlzLmRhdGFcbiAgICBjb25zdCB7IG9rLCBhcmcgfSA9IGF3YWl0IGFwaS5nZXREZXZzSGlzdG9yeUluZm8obWFjLCBwaWQsIG5hbWUsIGRhdGF0aW1lKVxuICAgIGlmIChvaykge1xuICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgb3B0aW9uOiB7XG4gICAgICAgICAgZGltZW5zaW9uczogWyd0aW1lJywgbmFtZV0sXG4gICAgICAgICAgc291cmNlOiBhcmdcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YS5vcHRpb24pO1xuICAgICAgXG4gICAgfSBlbHNlIHtcbiAgICAgIHd4LnNob3dNb2RhbCh7XG4gICAgICAgIHRpdGxlOiAnZXJyb3InLFxuICAgICAgICBjb250ZW50OiAn6I635Y+W5pWw5o2u5Ye66ZSZJ1xuICAgICAgfSlcbiAgICB9XG4gIH0sXG5cbiAgLy8g5pi+56S65pel5pyf6YCJ5oup5ZmoXG4gIHNob3dDYWxlbmRhcigpIHtcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgZGF0ZVNob3c6IHRydWVcbiAgICB9KVxuICB9LFxuICAvLyAg5YWz6Zet5pel5pyf6YCJ5oup5ZmoXG4gIG9uQ2xvc2UoKSB7XG4gICAgdGhpcy5zZXREYXRhKHsgZGF0ZVNob3c6IGZhbHNlIH0pO1xuICB9LFxuICBmb3JtYXREYXRlKGRhdGU6IERhdGUpIHtcbiAgICBkYXRlID0gbmV3IERhdGUoZGF0ZSk7XG4gICAgcmV0dXJuIGAke2RhdGUuZ2V0RnVsbFllYXIoKX0vJHtkYXRlLmdldE1vbnRoKCkgKyAxfS8ke2RhdGUuZ2V0RGF0ZSgpfWA7XG4gIH0sXG4gIC8vIOehruWumuaXpeacn1xuICBvbkNvbmZpcm0oZXZlbnQ6IHZhbnRFdmVudCkge1xuICAgIGNvbnNvbGUubG9nKGV2ZW50KTtcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgZGF0ZVNob3c6IGZhbHNlLFxuICAgICAgZGF0YXRpbWU6IHRoaXMuZm9ybWF0RGF0ZShldmVudC5kZXRhaWwpLFxuICAgIH0pO1xuICAgIHRoaXMuZ2V0RGV2c0hpc3RvcnlJbmZvKClcbiAgfSwgb25QdWxsRG93blJlZnJlc2g6IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBhd2FpdCB0aGlzLmdldERldnNIaXN0b3J5SW5mbygpXG4gICAgd3guc3RvcFB1bGxEb3duUmVmcmVzaCgpXG4gIH0sICovXG59KSJdfQ==