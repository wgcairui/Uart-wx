"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../../utils/util");
const api_1 = require("../../../utils/api");
Page({
    data: {
        devs: []
    },
    onLoad: function () {
        this.sortDevslist();
    },
    sortDevslist() {
        wx.getStorage({
            key: 'Uts'
        }).then(({ data }) => {
            this.setData({
                devs: data
            });
        }).catch(() => {
            wx.showModal({
                title: '设备错误',
                content: '缓存被清理或没有绑定设备,请在首页下拉刷新',
                success() {
                    wx.switchTab({ url: '/pages/index/index' });
                }
            });
        });
    },
    async deleteMountDev(event) {
        const { item, key } = event.currentTarget.dataset;
        wx.showModal({
            title: '解除挂载！！',
            content: `确定解除挂载设备：${item.mountDev} ？？`,
            success(res) {
                if (res.confirm) {
                    api_1.default.delTerminalMountDev(key, item.mountDev, item.pid).then(el => {
                        wx.startPullDownRefresh();
                    });
                }
            }
        });
    },
    addMonutDev(event) {
        const { item } = event.currentTarget.dataset;
        wx.navigateTo({
            url: '/pages/index/manageDev/addMountDev/addMountDev' + util_1.ObjectToStrquery({ item: JSON.stringify(item) }),
            events: {
                addSuccess() {
                    wx.nextTick(() => {
                        setTimeout(() => {
                            wx.startPullDownRefresh();
                        }, 500);
                    });
                }
            }
        });
    },
    async deleteDTU(event) {
        const { item: { DevMac, mountDevs, name } } = event.currentTarget.dataset;
        const del = await wx.showModal({
            title: `删除DTU`,
            content: `是否删除DTU:${name}?`,
        });
        if (del.confirm) {
            if (mountDevs.length > 0) {
                wx.showModal({
                    title: 'Tip',
                    content: `是否删除DTU绑定的所有设备?`,
                    success: async (res) => {
                        if (res.confirm) {
                            for (let dev of mountDevs) {
                                await this.deleteMountDev({ currentTarget: { dataset: { item: dev, key: DevMac } } });
                            }
                        }
                        else {
                            api_1.default.delUserTerminal(DevMac).then(() => {
                                wx.startPullDownRefresh();
                            });
                        }
                    }
                });
            }
            else {
                api_1.default.delUserTerminal(DevMac).then(() => {
                    wx.startPullDownRefresh();
                });
            }
        }
    },
    showDTUInfo(event) {
        wx.navigateTo({ url: `/pages/index/dtu/dtu?id=${event.currentTarget.dataset.item}` });
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: async function () {
        const { arg } = await api_1.default.getuserMountDev();
        arg.UTs.forEach(el => {
            wx.setStorage({
                key: el._id,
                data: el
            });
        });
        wx.setStorage({
            key: 'Uts',
            data: arg.UTs
        });
        this.sortDevslist();
        wx.stopPullDownRefresh();
    },
});
//# sourceMappingURL=data:application/json;base64,