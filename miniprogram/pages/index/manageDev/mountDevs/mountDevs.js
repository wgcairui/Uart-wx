"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../../../utils/util");
const api_1 = require("../../../../utils/api");
Page({
    data: {
        mac: '',
        terminal: {},
    },
    onLoad: function (options) {
        this.setData({
            mac: options.mac
        });
        this.start();
    },
    start() {
        api_1.default.getTerminal(this.data.mac).then(el => {
            if (el.code) {
                this.setData({
                    terminal: el.data
                });
            }
        });
    },
    async deleteMountDev(event) {
        const { item } = event.currentTarget.dataset;
        wx.showModal({
            title: '解除挂载！！',
            content: `确定解除挂载设备：${item.mountDev} ？？`,
            success: (res) => {
                if (res.confirm) {
                    api_1.default.delTerminalMountDev(this.data.mac, item.pid).then(() => {
                        this.start();
                    });
                }
            }
        });
    },
    addMonutDev() {
        wx.navigateTo({
            url: '/pages/index/manageDev/addMountDev/addMountDev' + util_1.ObjectToStrquery({ mac: this.data.mac }),
            events: {
                addSuccess() {
                    wx.nextTick(() => {
                        setTimeout(() => {
                            wx.startPullDownRefresh();
                        }, 500);
                    });
                }
            }
        });
    },
    async deleteDTU() {
        const { name, DevMac } = this.data.terminal;
        const del = await wx.showModal({
            title: `删除DTU`,
            content: `是否删除DTU:${name}?`,
        });
        if (del.confirm) {
            api_1.default.delUserTerminal(DevMac).then(() => {
                wx.navigateBack();
            });
        }
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
        this.start();
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91bnREZXZzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW91bnREZXZzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQXlEO0FBQ3pELCtDQUF1QztBQUN2QyxJQUFJLENBQUM7SUFLSCxJQUFJLEVBQUU7UUFDSixHQUFHLEVBQUUsRUFBRTtRQUNQLFFBQVEsRUFBRSxFQUFtQjtLQUM5QjtJQUtELE1BQU0sRUFBRSxVQUFVLE9BQXdCO1FBQ3hDLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDWCxHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUc7U0FDakIsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFBO0lBQ2QsQ0FBQztJQUVELEtBQUs7UUFDSCxhQUFHLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQ3ZDLElBQUksRUFBRSxDQUFDLElBQUksRUFBRTtnQkFDWCxJQUFJLENBQUMsT0FBTyxDQUFDO29CQUNYLFFBQVEsRUFBRSxFQUFFLENBQUMsSUFBSTtpQkFDbEIsQ0FBQyxDQUFBO2FBQ0g7UUFDSCxDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFHRCxLQUFLLENBQUMsY0FBYyxDQUFDLEtBQXdDO1FBQzNELE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQTtRQUM1QyxFQUFFLENBQUMsU0FBUyxDQUFDO1lBQ1gsS0FBSyxFQUFFLFFBQVE7WUFDZixPQUFPLEVBQUUsWUFBWSxJQUFJLENBQUMsUUFBUSxLQUFLO1lBQ3ZDLE9BQU8sRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUNmLElBQUksR0FBRyxDQUFDLE9BQU8sRUFBRTtvQkFDZixhQUFHLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7d0JBQ3pELElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQTtvQkFDZCxDQUFDLENBQUMsQ0FBQTtpQkFDSDtZQUNILENBQUM7U0FDRixDQUFDLENBQUE7SUFFSixDQUFDO0lBRUQsV0FBVztRQUNULEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDWixHQUFHLEVBQUUsZ0RBQWdELEdBQUcsdUJBQWdCLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUNoRyxNQUFNLEVBQUU7Z0JBQ04sVUFBVTtvQkFDUixFQUFFLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRTt3QkFDZixVQUFVLENBQUMsR0FBRyxFQUFFOzRCQUNkLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxDQUFBO3dCQUMzQixDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUE7b0JBQ1QsQ0FBQyxDQUFDLENBQUE7Z0JBQ0osQ0FBQzthQUNGO1NBQ0YsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELEtBQUssQ0FBQyxTQUFTO1FBQ2IsTUFBTSxFQUFHLElBQUksRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQTtRQUM1QyxNQUFNLEdBQUcsR0FBRyxNQUFNLEVBQUUsQ0FBQyxTQUFTLENBQUM7WUFDN0IsS0FBSyxFQUFFLE9BQU87WUFDZCxPQUFPLEVBQUUsV0FBVyxJQUFJLEdBQUc7U0FDNUIsQ0FBQyxDQUFBO1FBRUYsSUFBSSxHQUFHLENBQUMsT0FBTyxFQUFFO1lBQ2YsYUFBRyxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO2dCQUNwQyxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUE7WUFDbkIsQ0FBQyxDQUFDLENBQUE7U0FzQkg7SUFDSCxDQUFDO0lBS0QsT0FBTyxFQUFFO0lBRVQsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFLRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsUUFBUSxFQUFFO0lBRVYsQ0FBQztJQUtELGlCQUFpQixFQUFFO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQTtJQUNkLENBQUM7SUFLRCxhQUFhLEVBQUU7SUFFZixDQUFDO0lBS0QsaUJBQWlCLEVBQUU7SUFFbkIsQ0FBQztDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9iamVjdFRvU3RycXVlcnkgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvdXRpbFwiXG5pbXBvcnQgYXBpIGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9hcGlcIlxuUGFnZSh7XG5cbiAgLyoqXG4gICAqIOmhtemdoueahOWIneWni+aVsOaNrlxuICAgKi9cbiAgZGF0YToge1xuICAgIG1hYzogJycsXG4gICAgdGVybWluYWw6IHt9IGFzIFVhcnQuVGVybWluYWwsXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yqg6L29XG4gICAqL1xuICBvbkxvYWQ6IGZ1bmN0aW9uIChvcHRpb25zOiB7IG1hYzogc3RyaW5nIH0pIHtcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgbWFjOiBvcHRpb25zLm1hY1xuICAgIH0pXG4gICAgdGhpcy5zdGFydCgpXG4gIH0sXG5cbiAgc3RhcnQoKSB7XG4gICAgYXBpLmdldFRlcm1pbmFsKHRoaXMuZGF0YS5tYWMpLnRoZW4oZWwgPT4ge1xuICAgICAgaWYgKGVsLmNvZGUpIHtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICB0ZXJtaW5hbDogZWwuZGF0YVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH0pXG4gIH0sXG5cbiAgLy8g5Yig6ZmkRFRV5oyC6L296K6+5aSHXG4gIGFzeW5jIGRlbGV0ZU1vdW50RGV2KGV2ZW50OiB2YW50RXZlbnQ8VWFydC5UZXJtaW5hbE1vdW50RGV2cz4pIHtcbiAgICBjb25zdCB7IGl0ZW0gfSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldFxuICAgIHd4LnNob3dNb2RhbCh7XG4gICAgICB0aXRsZTogJ+ino+mZpOaMgui9ve+8ge+8gScsXG4gICAgICBjb250ZW50OiBg56Gu5a6a6Kej6Zmk5oyC6L296K6+5aSH77yaJHtpdGVtLm1vdW50RGV2fSDvvJ/vvJ9gLFxuICAgICAgc3VjY2VzczogKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLmNvbmZpcm0pIHtcbiAgICAgICAgICBhcGkuZGVsVGVybWluYWxNb3VudERldih0aGlzLmRhdGEubWFjLCBpdGVtLnBpZCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0KClcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcblxuICB9LFxuICAvLyDmt7vliqDnu5Hlrprorr7lpIdcbiAgYWRkTW9udXREZXYoKSB7XG4gICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICB1cmw6ICcvcGFnZXMvaW5kZXgvbWFuYWdlRGV2L2FkZE1vdW50RGV2L2FkZE1vdW50RGV2JyArIE9iamVjdFRvU3RycXVlcnkoeyBtYWM6IHRoaXMuZGF0YS5tYWMgfSksXG4gICAgICBldmVudHM6IHtcbiAgICAgICAgYWRkU3VjY2VzcygpIHtcbiAgICAgICAgICB3eC5uZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgd3guc3RhcnRQdWxsRG93blJlZnJlc2goKVxuICAgICAgICAgICAgfSwgNTAwKVxuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICB9LFxuICAvLyDliKDpmaREVFVcbiAgYXN5bmMgZGVsZXRlRFRVKCkge1xuICAgIGNvbnN0IHsgIG5hbWUsIERldk1hYyB9ID0gdGhpcy5kYXRhLnRlcm1pbmFsXG4gICAgY29uc3QgZGVsID0gYXdhaXQgd3guc2hvd01vZGFsKHtcbiAgICAgIHRpdGxlOiBg5Yig6ZmkRFRVYCxcbiAgICAgIGNvbnRlbnQ6IGDmmK/lkKbliKDpmaREVFU6JHtuYW1lfT9gLFxuICAgIH0pXG5cbiAgICBpZiAoZGVsLmNvbmZpcm0pIHtcbiAgICAgIGFwaS5kZWxVc2VyVGVybWluYWwoRGV2TWFjKS50aGVuKCgpID0+IHtcbiAgICAgICAgd3gubmF2aWdhdGVCYWNrKClcbiAgICAgIH0pXG4gICAgICAvKiBpZiAobW91bnREZXZzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgd3guc2hvd01vZGFsKHtcbiAgICAgICAgICB0aXRsZTogJ1RpcCcsXG4gICAgICAgICAgY29udGVudDogYOaYr+WQpuWIoOmZpERUVee7keWumueahOaJgOacieiuvuWkhz9gLFxuICAgICAgICAgIHN1Y2Nlc3M6IGFzeW5jIChyZXMpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXMuY29uZmlybSkge1xuICAgICAgICAgICAgICBmb3IgKGxldCBkZXYgb2YgbW91bnREZXZzKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgYXBpLmRlbFRlcm1pbmFsTW91bnREZXYoRGV2TWFjLCBkZXYucGlkKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBhcGkuZGVsVXNlclRlcm1pbmFsKERldk1hYykudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgd3gubmF2aWdhdGVCYWNrKClcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhcGkuZGVsVXNlclRlcm1pbmFsKERldk1hYykudGhlbigoKSA9PiB7XG4gICAgICAgICAgd3gubmF2aWdhdGVCYWNrKClcbiAgICAgICAgfSlcbiAgICAgIH0gKi9cbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yid5qyh5riy5p+T5a6M5oiQXG4gICAqL1xuICBvblJlYWR5OiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLmmL7npLpcbiAgICovXG4gIG9uU2hvdzogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i6ZqQ6JePXG4gICAqL1xuICBvbkhpZGU6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWNuOi9vVxuICAgKi9cbiAgb25VbmxvYWQ6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDpobXpnaLnm7jlhbPkuovku7blpITnkIblh73mlbAtLeebkeWQrOeUqOaIt+S4i+aLieWKqOS9nFxuICAgKi9cbiAgb25QdWxsRG93blJlZnJlc2g6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnN0YXJ0KClcbiAgfSxcblxuICAvKipcbiAgICog6aG16Z2i5LiK5ouJ6Kem5bqV5LqL5Lu255qE5aSE55CG5Ye95pWwXG4gICAqL1xuICBvblJlYWNoQm90dG9tOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55So5oi354K55Ye75Y+z5LiK6KeS5YiG5LqrXG4gICAqL1xuICBvblNoYXJlQXBwTWVzc2FnZTogZnVuY3Rpb24gKCkge1xuXG4gIH1cbn0pIl19