"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../../../utils/util");
const api_1 = require("../../../../utils/api");
Page({
    data: {
        mac: '',
        terminal: {},
    },
    onLoad: function (options) {
        this.setData({
            mac: options.mac
        });
        this.start();
    },
    start() {
        api_1.default.getTerminal(this.data.mac).then(el => {
            if (el.code) {
                this.setData({
                    terminal: el.data
                });
            }
        });
    },
    async deleteMountDev(event) {
        const { item } = event.currentTarget.dataset;
        wx.showModal({
            title: '解除挂载！！',
            content: `确定解除挂载设备：${item.mountDev} ？？`,
            success: (res) => {
                if (res.confirm) {
                    api_1.default.delTerminalMountDev(this.data.mac, item.pid).then(() => {
                        this.start();
                    });
                }
            }
        });
    },
    addMonutDev() {
        wx.navigateTo({
            url: '/pages/index/manageDev/addMountDev/addMountDev' + (0, util_1.ObjectToStrquery)({ mac: this.data.mac }),
            events: {
                addSuccess() {
                    wx.nextTick(() => {
                        setTimeout(() => {
                            wx.startPullDownRefresh();
                        }, 500);
                    });
                }
            }
        });
    },
    async deleteDTU() {
        const { name, DevMac } = this.data.terminal;
        const del = await wx.showModal({
            title: `删除DTU`,
            content: `是否删除DTU:${name}?`,
        });
        if (del.confirm) {
            api_1.default.delUserTerminal(DevMac).then(() => {
                wx.navigateBack();
            });
        }
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
        this.start();
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW91bnREZXZzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW91bnREZXZzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQXlEO0FBQ3pELCtDQUF1QztBQUN2QyxJQUFJLENBQUM7SUFLSCxJQUFJLEVBQUU7UUFDSixHQUFHLEVBQUUsRUFBRTtRQUNQLFFBQVEsRUFBRSxFQUFtQjtLQUM5QjtJQUtELE1BQU0sRUFBRSxVQUFVLE9BQXdCO1FBQ3hDLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDWCxHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUc7U0FDakIsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFBO0lBQ2QsQ0FBQztJQUVELEtBQUs7UUFDSCxhQUFHLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQ3ZDLElBQUksRUFBRSxDQUFDLElBQUksRUFBRTtnQkFDWCxJQUFJLENBQUMsT0FBTyxDQUFDO29CQUNYLFFBQVEsRUFBRSxFQUFFLENBQUMsSUFBSTtpQkFDbEIsQ0FBQyxDQUFBO2FBQ0g7UUFDSCxDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFHRCxLQUFLLENBQUMsY0FBYyxDQUFDLEtBQXdDO1FBQzNELE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQTtRQUM1QyxFQUFFLENBQUMsU0FBUyxDQUFDO1lBQ1gsS0FBSyxFQUFFLFFBQVE7WUFDZixPQUFPLEVBQUUsWUFBWSxJQUFJLENBQUMsUUFBUSxLQUFLO1lBQ3ZDLE9BQU8sRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUNmLElBQUksR0FBRyxDQUFDLE9BQU8sRUFBRTtvQkFDZixhQUFHLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7d0JBQ3pELElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQTtvQkFDZCxDQUFDLENBQUMsQ0FBQTtpQkFDSDtZQUNILENBQUM7U0FDRixDQUFDLENBQUE7SUFFSixDQUFDO0lBRUQsV0FBVztRQUNULEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDWixHQUFHLEVBQUUsZ0RBQWdELEdBQUcsSUFBQSx1QkFBZ0IsRUFBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ2hHLE1BQU0sRUFBRTtnQkFDTixVQUFVO29CQUNSLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFO3dCQUNmLFVBQVUsQ0FBQyxHQUFHLEVBQUU7NEJBQ2QsRUFBRSxDQUFDLG9CQUFvQixFQUFFLENBQUE7d0JBQzNCLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQTtvQkFDVCxDQUFDLENBQUMsQ0FBQTtnQkFDSixDQUFDO2FBQ0Y7U0FDRixDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsS0FBSyxDQUFDLFNBQVM7UUFDYixNQUFNLEVBQUcsSUFBSSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFBO1FBQzVDLE1BQU0sR0FBRyxHQUFHLE1BQU0sRUFBRSxDQUFDLFNBQVMsQ0FBQztZQUM3QixLQUFLLEVBQUUsT0FBTztZQUNkLE9BQU8sRUFBRSxXQUFXLElBQUksR0FBRztTQUM1QixDQUFDLENBQUE7UUFFRixJQUFJLEdBQUcsQ0FBQyxPQUFPLEVBQUU7WUFDZixhQUFHLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQ3BDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQTtZQUNuQixDQUFDLENBQUMsQ0FBQTtTQXNCSDtJQUNILENBQUM7SUFLRCxPQUFPLEVBQUU7SUFFVCxDQUFDO0lBS0QsTUFBTSxFQUFFO0lBRVIsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFLRCxRQUFRLEVBQUU7SUFFVixDQUFDO0lBS0QsaUJBQWlCLEVBQUU7UUFDakIsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFBO0lBQ2QsQ0FBQztJQUtELGFBQWEsRUFBRTtJQUVmLENBQUM7SUFLRCxpQkFBaUIsRUFBRTtJQUVuQixDQUFDO0NBQ0YsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JqZWN0VG9TdHJxdWVyeSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy91dGlsXCJcbmltcG9ydCBhcGkgZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL2FwaVwiXG5QYWdlKHtcblxuICAvKipcbiAgICog6aG16Z2i55qE5Yid5aeL5pWw5o2uXG4gICAqL1xuICBkYXRhOiB7XG4gICAgbWFjOiAnJyxcbiAgICB0ZXJtaW5hbDoge30gYXMgVWFydC5UZXJtaW5hbCxcbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLliqDovb1cbiAgICovXG4gIG9uTG9hZDogZnVuY3Rpb24gKG9wdGlvbnM6IHsgbWFjOiBzdHJpbmcgfSkge1xuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBtYWM6IG9wdGlvbnMubWFjXG4gICAgfSlcbiAgICB0aGlzLnN0YXJ0KClcbiAgfSxcblxuICBzdGFydCgpIHtcbiAgICBhcGkuZ2V0VGVybWluYWwodGhpcy5kYXRhLm1hYykudGhlbihlbCA9PiB7XG4gICAgICBpZiAoZWwuY29kZSkge1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgIHRlcm1pbmFsOiBlbC5kYXRhXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcbiAgfSxcblxuICAvLyDliKDpmaREVFXmjILovb3orr7lpIdcbiAgYXN5bmMgZGVsZXRlTW91bnREZXYoZXZlbnQ6IHZhbnRFdmVudDxVYXJ0LlRlcm1pbmFsTW91bnREZXZzPikge1xuICAgIGNvbnN0IHsgaXRlbSB9ID0gZXZlbnQuY3VycmVudFRhcmdldC5kYXRhc2V0XG4gICAgd3guc2hvd01vZGFsKHtcbiAgICAgIHRpdGxlOiAn6Kej6Zmk5oyC6L2977yB77yBJyxcbiAgICAgIGNvbnRlbnQ6IGDnoa7lrprop6PpmaTmjILovb3orr7lpIfvvJoke2l0ZW0ubW91bnREZXZ9IO+8n++8n2AsXG4gICAgICBzdWNjZXNzOiAocmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXMuY29uZmlybSkge1xuICAgICAgICAgIGFwaS5kZWxUZXJtaW5hbE1vdW50RGV2KHRoaXMuZGF0YS5tYWMsIGl0ZW0ucGlkKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc3RhcnQoKVxuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuXG4gIH0sXG4gIC8vIOa3u+WKoOe7keWumuiuvuWkh1xuICBhZGRNb251dERldigpIHtcbiAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgIHVybDogJy9wYWdlcy9pbmRleC9tYW5hZ2VEZXYvYWRkTW91bnREZXYvYWRkTW91bnREZXYnICsgT2JqZWN0VG9TdHJxdWVyeSh7IG1hYzogdGhpcy5kYXRhLm1hYyB9KSxcbiAgICAgIGV2ZW50czoge1xuICAgICAgICBhZGRTdWNjZXNzKCkge1xuICAgICAgICAgIHd4Lm5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICB3eC5zdGFydFB1bGxEb3duUmVmcmVzaCgpXG4gICAgICAgICAgICB9LCA1MDApXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH0sXG4gIC8vIOWIoOmZpERUVVxuICBhc3luYyBkZWxldGVEVFUoKSB7XG4gICAgY29uc3QgeyAgbmFtZSwgRGV2TWFjIH0gPSB0aGlzLmRhdGEudGVybWluYWxcbiAgICBjb25zdCBkZWwgPSBhd2FpdCB3eC5zaG93TW9kYWwoe1xuICAgICAgdGl0bGU6IGDliKDpmaREVFVgLFxuICAgICAgY29udGVudDogYOaYr+WQpuWIoOmZpERUVToke25hbWV9P2AsXG4gICAgfSlcblxuICAgIGlmIChkZWwuY29uZmlybSkge1xuICAgICAgYXBpLmRlbFVzZXJUZXJtaW5hbChEZXZNYWMpLnRoZW4oKCkgPT4ge1xuICAgICAgICB3eC5uYXZpZ2F0ZUJhY2soKVxuICAgICAgfSlcbiAgICAgIC8qIGlmIChtb3VudERldnMubGVuZ3RoID4gMCkge1xuICAgICAgICB3eC5zaG93TW9kYWwoe1xuICAgICAgICAgIHRpdGxlOiAnVGlwJyxcbiAgICAgICAgICBjb250ZW50OiBg5piv5ZCm5Yig6ZmkRFRV57uR5a6a55qE5omA5pyJ6K6+5aSHP2AsXG4gICAgICAgICAgc3VjY2VzczogYXN5bmMgKHJlcykgPT4ge1xuICAgICAgICAgICAgaWYgKHJlcy5jb25maXJtKSB7XG4gICAgICAgICAgICAgIGZvciAobGV0IGRldiBvZiBtb3VudERldnMpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBhcGkuZGVsVGVybWluYWxNb3VudERldihEZXZNYWMsIGRldi5waWQpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGFwaS5kZWxVc2VyVGVybWluYWwoRGV2TWFjKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICB3eC5uYXZpZ2F0ZUJhY2soKVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFwaS5kZWxVc2VyVGVybWluYWwoRGV2TWFjKS50aGVuKCgpID0+IHtcbiAgICAgICAgICB3eC5uYXZpZ2F0ZUJhY2soKVxuICAgICAgICB9KVxuICAgICAgfSAqL1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLliJ3mrKHmuLLmn5PlrozmiJBcbiAgICovXG4gIG9uUmVhZHk6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouaYvuekulxuICAgKi9cbiAgb25TaG93OiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLpmpDol49cbiAgICovXG4gIG9uSGlkZTogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Y246L29XG4gICAqL1xuICBvblVubG9hZDogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOmhtemdouebuOWFs+S6i+S7tuWkhOeQhuWHveaVsC0t55uR5ZCs55So5oi35LiL5ouJ5Yqo5L2cXG4gICAqL1xuICBvblB1bGxEb3duUmVmcmVzaDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuc3RhcnQoKVxuICB9LFxuXG4gIC8qKlxuICAgKiDpobXpnaLkuIrmi4nop6blupXkuovku7bnmoTlpITnkIblh73mlbBcbiAgICovXG4gIG9uUmVhY2hCb3R0b206IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDnlKjmiLfngrnlh7vlj7PkuIrop5LliIbkuqtcbiAgICovXG4gIG9uU2hhcmVBcHBNZXNzYWdlOiBmdW5jdGlvbiAoKSB7XG5cbiAgfVxufSkiXX0=