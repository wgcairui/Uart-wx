"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const api_1 = require("../../../../utils/api");
const util_1 = require("../../../../utils/util");
Page({
    data: {
        tel: [],
        mail: []
    },
    onLoad: function () {
        const eventChannel = this.getOpenerEventChannel();
        eventChannel.on("alarm", ({ tel, mail }) => {
            this.setData({
                tel,
                mail
            });
        });
    },
    addTel() {
        const tel = [...this.data.tel, ''];
        this.setData({
            tel
        });
    },
    addMail() {
        const mail = [...this.data.mail, ''];
        this.setData({
            mail
        });
    },
    modifyTel(e) {
        const old = e.currentTarget.dataset.key;
        const newVal = e.detail.value;
        if ((0, util_1.RgexpTel)(newVal) || newVal.length === 0) {
            const i = this.data.tel.findIndex(el => el === old);
            this.data.tel.splice(i, 1, newVal);
            this.setData({
                tel: this.data.tel.filter(el => el)
            });
        }
        else {
            wx.showModal({
                content: `${newVal}不是正确的手机号格式`,
                title: "号码错误"
            });
        }
    },
    modifyMail(e) {
        const old = e.currentTarget.dataset.key;
        const newVal = e.detail.value;
        if ((0, util_1.RgexpMail)(newVal) || newVal.length === 0) {
            const i = this.data.mail.findIndex(el => el === old);
            this.data.mail.splice(i, 1, newVal);
            this.setData({
                mail: this.data.mail.filter(el => el)
            });
        }
        else {
            wx.showModal({
                content: `${newVal}不是正确的邮箱格式`,
                title: "邮箱错误"
            });
        }
    },
    submit() {
        const eventChannel = this.getOpenerEventChannel();
        const { tel, mail } = this.data;
        const tels = tel.filter(el => (0, util_1.RgexpTel)(el));
        const mails = mail.filter(el => (0, util_1.RgexpMail)(el));
        wx.showLoading({ title: '提交中' });
        api_1.default.modifyUserAlarmSetupTel([...new Set(tels)], [...new Set(mails)]).then(() => {
            wx.hideLoading();
            eventChannel.emit("modifyOk", { tel: tels, mail: mails });
            wx.navigateBack();
        });
    },
    disbledSumbit() {
        return this.data.mail.every(el => (0, util_1.RgexpMail)(el)) && this.data.tel.every(el => (0, util_1.RgexpTel)(el));
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
    }
});
//# sourceMappingURL=data:application/json;base64,