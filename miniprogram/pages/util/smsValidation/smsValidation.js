"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const api_1 = require("../../../utils/api");
Page({
    data: {
        tel: '',
        sms: '',
        senddisable: false,
        sendtext: '发送验证码',
        int: 60,
        interval: 0
    },
    onLoad: function () {
    },
    async sendValidation() {
        wx.showLoading({ title: '正在发送' });
        const { code, msg } = await api_1.default.fetch('smsValidation');
        wx.hideLoading();
        if (!code)
            wx.showModal({ title: '发送失败', content: msg });
        else {
            wx.showModal({
                title: '发送成功',
                content: '已发送到' + msg
            });
        }
        const interval = setInterval(() => {
            if (this.data.int === 0) {
                clearInterval(this.data.interval);
                this.setData({
                    senddisable: false,
                    sendtext: '发送验证码',
                    interval
                });
            }
            else {
                this.setData({
                    int: this.data.int - 1,
                    sendtext: this.data.int - 1 + '秒后再试'
                });
            }
        }, 1000);
        this.setData({
            senddisable: true,
            sendtext: '60秒后再试',
            interval
        });
    },
    checkSms() {
        const event = this.getOpenerEventChannel();
        event.emit("code", this.data.sms);
        wx.navigateBack();
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21zVmFsaWRhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNtc1ZhbGlkYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0Q0FBb0M7QUFHcEMsSUFBSSxDQUFDO0lBS0gsSUFBSSxFQUFFO1FBQ0osR0FBRyxFQUFFLEVBQUU7UUFDUCxHQUFHLEVBQUUsRUFBRTtRQUNQLFdBQVcsRUFBRSxLQUFLO1FBQ2xCLFFBQVEsRUFBRSxPQUFPO1FBQ2pCLEdBQUcsRUFBRSxFQUFFO1FBQ1AsUUFBUSxFQUFFLENBQUM7S0FDWjtJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFHRCxLQUFLLENBQUMsY0FBYztRQUNsQixFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUE7UUFDakMsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsR0FBRyxNQUFNLGFBQUcsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUE7UUFDdEQsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFBO1FBQ2hCLElBQUksQ0FBQyxJQUFJO1lBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUE7YUFDbkQ7WUFDSCxFQUFFLENBQUMsU0FBUyxDQUFDO2dCQUNYLEtBQUssRUFBRSxNQUFNO2dCQUNiLE9BQU8sRUFBRSxNQUFNLEdBQUcsR0FBRzthQUN0QixDQUFDLENBQUE7U0FDSDtRQUNELE1BQU0sUUFBUSxHQUFHLFdBQVcsQ0FBQyxHQUFHLEVBQUU7WUFDaEMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLEVBQUU7Z0JBQ3ZCLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFBO2dCQUNqQyxJQUFJLENBQUMsT0FBTyxDQUFDO29CQUNYLFdBQVcsRUFBRSxLQUFLO29CQUNsQixRQUFRLEVBQUUsT0FBTztvQkFDakIsUUFBUTtpQkFDVCxDQUFDLENBQUE7YUFDSDtpQkFBTTtnQkFDTCxJQUFJLENBQUMsT0FBTyxDQUFDO29CQUNYLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO29CQUN0QixRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxHQUFHLE1BQU07aUJBQ3JDLENBQUMsQ0FBQTthQUNIO1FBQ0gsQ0FBQyxFQUFFLElBQUksQ0FBUSxDQUFBO1FBQ2YsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLFdBQVcsRUFBRSxJQUFJO1lBQ2pCLFFBQVEsRUFBRSxRQUFRO1lBQ2xCLFFBQVE7U0FDVCxDQUFDLENBQUE7SUFHSixDQUFDO0lBRUQsUUFBUTtRQUNOLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFBO1FBQzFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDakMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFBO0lBQ25CLENBQUM7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBpIGZyb20gXCIuLi8uLi8uLi91dGlscy9hcGlcIlxuXG4vLyBtaW5pcHJvZ3JhbS9wYWdlcy91dGlsL3Ntc1ZhbGlkYXRpb24vc21zVmFsaWRhdGlvbi5qc1xuUGFnZSh7XG5cbiAgLyoqXG4gICAqIOmhtemdoueahOWIneWni+aVsOaNrlxuICAgKi9cbiAgZGF0YToge1xuICAgIHRlbDogJycsXG4gICAgc21zOiAnJyxcbiAgICBzZW5kZGlzYWJsZTogZmFsc2UsXG4gICAgc2VuZHRleHQ6ICflj5HpgIHpqozor4HnoIEnLFxuICAgIGludDogNjAsXG4gICAgaW50ZXJ2YWw6IDBcbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLliqDovb1cbiAgICovXG4gIG9uTG9hZDogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLy8g5Y+R6YCB55+t5L+h6aqM6K+B56CBXG4gIGFzeW5jIHNlbmRWYWxpZGF0aW9uKCkge1xuICAgIHd4LnNob3dMb2FkaW5nKHsgdGl0bGU6ICfmraPlnKjlj5HpgIEnIH0pXG4gICAgY29uc3QgeyBjb2RlLCBtc2cgfSA9IGF3YWl0IGFwaS5mZXRjaCgnc21zVmFsaWRhdGlvbicpXG4gICAgd3guaGlkZUxvYWRpbmcoKVxuICAgIGlmICghY29kZSkgd3guc2hvd01vZGFsKHsgdGl0bGU6ICflj5HpgIHlpLHotKUnLCBjb250ZW50OiBtc2cgfSlcbiAgICBlbHNlIHtcbiAgICAgIHd4LnNob3dNb2RhbCh7XG4gICAgICAgIHRpdGxlOiAn5Y+R6YCB5oiQ5YqfJyxcbiAgICAgICAgY29udGVudDogJ+W3suWPkemAgeWIsCcgKyBtc2dcbiAgICAgIH0pXG4gICAgfVxuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuZGF0YS5pbnQgPT09IDApIHtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmRhdGEuaW50ZXJ2YWwpXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgc2VuZGRpc2FibGU6IGZhbHNlLFxuICAgICAgICAgIHNlbmR0ZXh0OiAn5Y+R6YCB6aqM6K+B56CBJyxcbiAgICAgICAgICBpbnRlcnZhbFxuICAgICAgICB9KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICBpbnQ6IHRoaXMuZGF0YS5pbnQgLSAxLFxuICAgICAgICAgIHNlbmR0ZXh0OiB0aGlzLmRhdGEuaW50IC0gMSArICfnp5LlkI7lho3or5UnXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSwgMTAwMCkgYXMgYW55XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIHNlbmRkaXNhYmxlOiB0cnVlLFxuICAgICAgc2VuZHRleHQ6ICc2MOenkuWQjuWGjeivlScsXG4gICAgICBpbnRlcnZhbFxuICAgIH0pXG5cblxuICB9LFxuICAvLyDmo4Dmn6Xpqozor4HnoIHvvIzlpoLmnpzmmK805L2N5YiZ5LiK5Lyg6aqM6K+BXG4gIGNoZWNrU21zKCkge1xuICAgIGNvbnN0IGV2ZW50ID0gdGhpcy5nZXRPcGVuZXJFdmVudENoYW5uZWwoKVxuICAgIGV2ZW50LmVtaXQoXCJjb2RlXCIsIHRoaXMuZGF0YS5zbXMpXG4gICAgd3gubmF2aWdhdGVCYWNrKClcbiAgfVxufSkiXX0=