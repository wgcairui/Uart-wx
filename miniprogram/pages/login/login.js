"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../utils/util");
const api_1 = require("../../utils/api");
Page({
    data: {
        userInfo: {
            avatarUrl: "http://www.ladishb.com/admin/upload/11122020__LADS108.png",
        },
        tel: '',
        registerloading: false,
        loginloading: false,
        openid: '',
        accontUser: '',
        accontPasswd: ''
    },
    onLoad(opt) {
        this.setData({
            openid: opt.openid
        });
    },
    getUserInfo() {
        wx.getUserProfile({
            desc: '用于注册小程序',
            success: (info) => {
                this.setData({
                    userInfo: info.userInfo
                });
            }
        });
    },
    tabclick(event) {
        wx.setNavigationBarTitle({ title: event.detail.title });
    },
    async getphonenumber(e) {
        if (!e.detail.encryptedData)
            return;
        wx.showLoading({ title: '获取手机号' });
        const telObj = await api_1.default.getphonenumber({ openid: this.data.openid, encryptedData: e.detail.encryptedData, iv: e.detail.iv });
        const tel = telObj.arg.phoneNumber;
        this.setData({
            tel,
            "userInfo.nickName": this.data.userInfo.nickName || 'user' + tel.slice(-4)
        });
        wx.hideLoading();
    },
    async register() {
        await util_1.SubscribeMessage(['注册成功提醒', '设备告警提醒']);
        this.setData({ registerloading: true });
        const { userInfo: { nickName, avatarUrl }, tel } = this.data;
        const { ok, msg } = await api_1.default.registerUser({ user: this.data.openid, name: nickName, avanter: avatarUrl, tel });
        this.setData({ registerloading: false });
        if (!ok) {
            wx.showModal({ title: msg, icon: "none", duration: 5000 });
        }
        else {
            wx.reLaunch({ url: '/pages/index/index' });
        }
    },
    async login() {
        await util_1.SubscribeMessage(['设备告警提醒']);
        const { accontUser, accontPasswd, openid } = this.data;
        this.setData({ loginloading: true });
        const { ok, msg } = await api_1.default.userlogin({ avanter: this.data.userInfo.avatarUrl, openid, user: accontUser, passwd: accontPasswd });
        this.setData({ loginloading: false });
        if (ok) {
            wx.reLaunch({ url: '/pages/index/index' });
        }
        else {
            wx.showModal({
                title: '登录错误',
                content: msg
            });
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsb2dpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJDQUFvRDtBQUVwRCx5Q0FBa0M7QUFDbEMsSUFBSSxDQUFDO0lBSUgsSUFBSSxFQUFFO1FBRUosUUFBUSxFQUFFO1lBQ1IsU0FBUyxFQUFFLDJEQUEyRDtTQUN6QztRQUMvQixHQUFHLEVBQUUsRUFBRTtRQUNQLGVBQWUsRUFBRSxLQUFLO1FBQ3RCLFlBQVksRUFBRSxLQUFLO1FBQ25CLE1BQU0sRUFBRSxFQUFFO1FBQ1YsVUFBVSxFQUFFLEVBQUU7UUFDZCxZQUFZLEVBQUUsRUFBRTtLQUNqQjtJQUNELE1BQU0sQ0FBQyxHQUF3QjtRQUM3QixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsTUFBTSxFQUFFLEdBQUcsQ0FBQyxNQUFNO1NBQ25CLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFNRCxXQUFXO1FBQ1QsRUFBRSxDQUFDLGNBQWMsQ0FBQztZQUNoQixJQUFJLEVBQUUsU0FBUztZQUNmLE9BQU8sRUFBRSxDQUFDLElBQThDLEVBQUUsRUFBRTtnQkFDMUQsSUFBSSxDQUFDLE9BQU8sQ0FBQztvQkFDWCxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7aUJBQ3hCLENBQUMsQ0FBQTtZQUNKLENBQUM7U0FDRixDQUFDLENBQUE7SUFJSixDQUFDO0lBQ0QsUUFBUSxDQUFDLEtBQWdCO1FBQ3ZCLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUE7SUFDekQsQ0FBQztJQUVELEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBWTtRQUMvQixJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxhQUFhO1lBQUUsT0FBTTtRQUNuQyxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUE7UUFDbEMsTUFBTSxNQUFN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cy91dGlsXCI7XG4vLyBtaW5pcHJvZ3JhbS9wYWdlcy9sb2dpbi9sb2dpbi5qc1xuaW1wb3J0IGFwaSBmcm9tIFwiLi4vLi4vdXRpbHMvYXBpXCI7XG5QYWdlKHtcbiAgLyoqXG4gICAqIOmhtemdoueahOWIneWni+aVsOaNrlxuICAgKi9cbiAgZGF0YToge1xuICAgIC8vIGltZzpcImh0dHBzOi8vd3d3LmxhZGlzaGIuY29tL3VwbG9hZC81eTJ3WVdrbEUwdXNnWUcwVndMVGRSbmMucG5nXCIsXG4gICAgdXNlckluZm86IHtcbiAgICAgIGF2YXRhclVybDogXCJodHRwOi8vd3d3LmxhZGlzaGIuY29tL2FkbWluL3VwbG9hZC8xMTEyMjAyMF9fTEFEUzEwOC5wbmdcIixcbiAgICB9IGFzIFdlY2hhdE1pbmlwcm9ncmFtLlVzZXJJbmZvLFxuICAgIHRlbDogJycsXG4gICAgcmVnaXN0ZXJsb2FkaW5nOiBmYWxzZSxcbiAgICBsb2dpbmxvYWRpbmc6IGZhbHNlLFxuICAgIG9wZW5pZDogJycsXG4gICAgYWNjb250VXNlcjogJycsXG4gICAgYWNjb250UGFzc3dkOiAnJ1xuICB9LFxuICBvbkxvYWQob3B0OiB7IG9wZW5pZDogc3RyaW5nOyB9KSB7XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIG9wZW5pZDogb3B0Lm9wZW5pZFxuICAgIH0pXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yqg6L29XG4gICAqL1xuICAvLyDojrflj5bnlKjmiLfkv6Hmga9cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgd3guZ2V0VXNlclByb2ZpbGUoe1xuICAgICAgZGVzYzogJ+eUqOS6juazqOWGjOWwj+eoi+W6jycsXG4gICAgICBzdWNjZXNzOiAoaW5mbzogeyB1c2VySW5mbzogV2VjaGF0TWluaXByb2dyYW0uVXNlckluZm8gfSkgPT4ge1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgIHVzZXJJbmZvOiBpbmZvLnVzZXJJbmZvXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcbiAgICAvKiB0aGlzLnNldERhdGEoe1xuICAgICAgdXNlckluZm86IGUuZGV0YWlsLnVzZXJJbmZvXG4gICAgfSkgKi9cbiAgfSxcbiAgdGFiY2xpY2soZXZlbnQ6IHZhbnRFdmVudCkge1xuICAgIHd4LnNldE5hdmlnYXRpb25CYXJUaXRsZSh7IHRpdGxlOiBldmVudC5kZXRhaWwudGl0bGUgfSlcbiAgfSxcbiAgLy8g6I635Y+W55So5oi35omL5py65Y+356CBXG4gIGFzeW5jIGdldHBob25lbnVtYmVyKGU6IHZhbnRFdmVudCkge1xuICAgIGlmICghZS5kZXRhaWwuZW5jcnlwdGVkRGF0YSkgcmV0dXJuXG4gICAgd3guc2hvd0xvYWRpbmcoeyB0aXRsZTogJ+iOt+WPluaJi+acuuWPtycgfSlcbiAgICBjb25zdCB0ZWxPYmogPSBhd2FpdCBhcGkuZ2V0cGhvbmVudW1iZXI8YW55Pih7IG9wZW5pZDogdGhpcy5kYXRhLm9wZW5pZCwgZW5jcnlwdGVkRGF0YTogZS5kZXRhaWwuZW5jcnlwdGVkRGF0YSwgaXY6IGUuZGV0YWlsLml2IH0pXG4gICAgY29uc3QgdGVsID0gdGVsT2JqLmFyZy5waG9uZU51bWJlclxuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICB0ZWwsXG4gICAgICBcInVzZXJJbmZvLm5pY2tOYW1lXCI6IHRoaXMuZGF0YS51c2VySW5mby5uaWNrTmFtZSB8fCAndXNlcicgKyB0ZWwuc2xpY2UoLTQpXG4gICAgfSlcbiAgICB3eC5oaWRlTG9hZGluZygpXG4gIH0sXG4gIC8vIOazqOWGjOeUqOaIt1xuICBhc3luYyByZWdpc3RlcigpIHtcbiAgICBhd2FpdCBTdWJzY3JpYmVNZXNzYWdlKFsn5rOo5YaM5oiQ5Yqf5o+Q6YaSJywgJ+iuvuWkh+WRiuitpuaPkOmGkiddKVxuICAgIHRoaXMuc2V0RGF0YSh7IHJlZ2lzdGVybG9hZGluZzogdHJ1ZSB9KVxuICAgIGNvbnN0IHsgdXNlckluZm86IHsgbmlja05hbWUsIGF2YXRhclVybCB9LCB0ZWwgfSA9IHRoaXMuZGF0YVxuICAgIGNvbnN0IHsgb2ssIG1zZyB9ID0gYXdhaXQgYXBpLnJlZ2lzdGVyVXNlcih7IHVzZXI6IHRoaXMuZGF0YS5vcGVuaWQsIG5hbWU6IG5pY2tOYW1lLCBhdmFudGVyOiBhdmF0YXJVcmwsIHRlbCB9KVxuICAgIHRoaXMuc2V0RGF0YSh7IHJlZ2lzdGVybG9hZGluZzogZmFsc2UgfSlcbiAgICBpZiAoIW9rKSB7XG4gICAgICB3eC5zaG93TW9kYWwoeyB0aXRsZTogbXNnLCBpY29uOiBcIm5vbmVcIiwgZHVyYXRpb246IDUwMDAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgd3gucmVMYXVuY2goeyB1cmw6ICcvcGFnZXMvaW5kZXgvaW5kZXgnIH0pXG4gICAgfVxuXG4gIH0sXG4gIC8vIOeZu+W9lVxuICBhc3luYyBsb2dpbigpIHtcbiAgICBhd2FpdCBTdWJzY3JpYmVNZXNzYWdlKFsn6K6+5aSH5ZGK6K2m5o+Q6YaSJ10pXG4gICAgY29uc3QgeyBhY2NvbnRVc2VyLCBhY2NvbnRQYXNzd2QsIG9wZW5pZCB9ID0gdGhpcy5kYXRhXG4gICAgdGhpcy5zZXREYXRhKHsgbG9naW5sb2FkaW5nOiB0cnVlIH0pXG4gICAgY29uc3QgeyBvaywgbXNnIH0gPSBhd2FpdCBhcGkudXNlcmxvZ2luKHsgYXZhbnRlcjogdGhpcy5kYXRhLnVzZXJJbmZvLmF2YXRhclVybCwgb3BlbmlkLCB1c2VyOiBhY2NvbnRVc2VyLCBwYXNzd2Q6IGFjY29udFBhc3N3ZCB9KVxuICAgIHRoaXMuc2V0RGF0YSh7IGxvZ2lubG9hZGluZzogZmFsc2UgfSlcbiAgICBpZiAob2spIHtcbiAgICAgIHd4LnJlTGF1bmNoKHsgdXJsOiAnL3BhZ2VzL2luZGV4L2luZGV4JyB9KVxuICAgIH0gZWxzZSB7XG4gICAgICB3eC5zaG93TW9kYWwoe1xuICAgICAgICB0aXRsZTogJ+eZu+W9lemUmeivrycsXG4gICAgICAgIGNvbnRlbnQ6IG1zZ1xuICAgICAgfSlcbiAgICB9XG4gIH1cbn0pXG4iXX0=