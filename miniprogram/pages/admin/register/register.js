"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const api_1 = require("../../../utils/api");
Page({
    data: {
        mac: '',
        dtus: [],
        nodes: [],
        radio: ''
    },
    onLoad: function () {
        this.getNodes();
    },
    async scanMac() {
        const scanResult = await wx.scanCode({});
        this.setData({
            mac: scanResult.result
        });
        this.addDtus();
    },
    scanRequst() {
        this.addDtus();
    },
    addDtus() {
        const mac = this.data.mac;
        if (this.data.dtus.includes(mac)) {
            console.log('重复扫描');
        }
        else {
            this.setData({
                mac,
                dtus: [...this.data.dtus, mac]
            });
            const dtulen = this.data.dtus.length;
            for (let node of this.data.nodes) {
                if (node.MaxConnections - node.count > dtulen) {
                    this.setData({
                        radio: node.Name
                    });
                    break;
                }
            }
        }
    },
    onChange_Node(event) {
        console.log(event);
    },
    rmDtu(event) {
        const key = event.currentTarget.dataset.key;
        wx.showModal({
            title: '删除dtu',
            content: `确定删除dtu:${key} ??`,
            success: (res) => {
                if (res.confirm) {
                    this.setData({
                        dtus: this.data.dtus.filter(el => el !== key)
                    });
                }
            }
        });
    },
    async getNodes() {
        const { arg } = await api_1.default.getNodes();
        this.setData({
            nodes: arg,
            radio: arg[0].Name
        });
    },
    changeNode(event) {
        this.setData({
            radio: event.detail,
        });
    },
    selectNode(event) {
        const item = event.currentTarget.dataset.item;
        this.setData({
            radio: item.Name
        });
    },
    submit() {
        const { dtus, radio } = this.data;
        wx.showModal({
            title: '提交核对',
            content: `本次提交的dtu数目:${dtus.length},挂载的节点为:${radio},`,
            success: async () => {
                const { ok, msg } = await api_1.default.bacthRegisterDTU(radio, dtus);
                if (ok) {
                    wx.showToast({
                        title: '提交成功'
                    });
                    this.setData({
                        dtus: [],
                        mac: ''
                    });
                }
                else {
                    wx.showModal({
                        title: '提交错误',
                        content: msg
                    });
                }
            }
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZWdpc3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDRDQUFxQztBQUdyQyxJQUFJLENBQUM7SUFLSCxJQUFJLEVBQUU7UUFDSixHQUFHLEVBQUUsRUFBRTtRQUNQLElBQUksRUFBRSxFQUFjO1FBQ3BCLEtBQUssRUFBRSxFQUFrQjtRQUN6QixLQUFLLEVBQUUsRUFBRTtLQUNWO0lBS0QsTUFBTSxFQUFFO1FBQ04sSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFBO0lBQ2pCLENBQUM7SUFHRCxLQUFLLENBQUMsT0FBTztRQUNYLE1BQU0sVUFBVSxHQUFHLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUN4QyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsR0FBRyxFQUFFLFVBQVUsQ0FBQyxNQUFNO1NBQ3ZCLENBQUMsQ0FBQTtRQUNGLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQTtJQUNoQixDQUFDO0lBR0QsVUFBVTtRQUNSLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQTtJQUNoQixDQUFDO0lBR0QsT0FBTztRQUNMLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFBO1FBQ3pCLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2hDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDckI7YUFBTTtZQUNMLElBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQ1gsR0FBRztnQkFDSCxJQUFJLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQzthQUMvQixDQUFDLENBQUE7WUFDRixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUE7WUFDcEMsS0FBSyxJ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cGkgZnJvbSBcIi4uLy4uLy4uL3V0aWxzL2FwaVwiO1xuXG4vLyBtaW5pcHJvZ3JhbS9wYWdlcy9hZG1pbi9yZWdpc3Rlci9yZWdpc3Rlci5qc1xuUGFnZSh7XG5cbiAgLyoqXG4gICAqIOmhtemdoueahOWIneWni+aVsOaNrlxuICAgKi9cbiAgZGF0YToge1xuICAgIG1hYzogJycsXG4gICAgZHR1czogW10gYXMgc3RyaW5nW10sXG4gICAgbm9kZXM6IFtdIGFzIE5vZGVDbGllbnRbXSxcbiAgICByYWRpbzogJydcbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLliqDovb1cbiAgICovXG4gIG9uTG9hZDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZ2V0Tm9kZXMoKVxuICB9LFxuXG4gIC8vIOiwg+eUqOW+ruS/oWFwae+8jOaJq+aPj0RUVeadoeW9oueggVxuICBhc3luYyBzY2FuTWFjKCkge1xuICAgIGNvbnN0IHNjYW5SZXN1bHQgPSBhd2FpdCB3eC5zY2FuQ29kZSh7fSlcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgbWFjOiBzY2FuUmVzdWx0LnJlc3VsdFxuICAgIH0pXG4gICAgdGhpcy5hZGREdHVzKClcbiAgfSxcblxuICAvLyDliqDlhaVkdHVzXG4gIHNjYW5SZXF1c3QoKSB7XG4gICAgdGhpcy5hZGREdHVzKClcbiAgfSxcblxuICAvLyBhZGRcbiAgYWRkRHR1cygpIHtcbiAgICBjb25zdCBtYWMgPSB0aGlzLmRhdGEubWFjXG4gICAgaWYgKHRoaXMuZGF0YS5kdHVzLmluY2x1ZGVzKG1hYykpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfph43lpI3miavmj48nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgbWFjLFxuICAgICAgICBkdHVzOiBbLi4udGhpcy5kYXRhLmR0dXMsIG1hY11cbiAgICAgIH0pXG4gICAgICBjb25zdCBkdHVsZW4gPSB0aGlzLmRhdGEuZHR1cy5sZW5ndGhcbiAgICAgIGZvciAobGV0IG5vZGUgb2YgdGhpcy5kYXRhLm5vZGVzKSB7XG4gICAgICAgIGlmIChub2RlLk1heENvbm5lY3Rpb25zIC0gbm9kZS5jb3VudCA+IGR0dWxlbikge1xuICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICByYWRpbzogbm9kZS5OYW1lXG4gICAgICAgICAgfSlcbiAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIC8vIOmAieaLqeiKgueCuVxuICBvbkNoYW5nZV9Ob2RlKGV2ZW50OiB2YW50RXZlbnQpIHtcbiAgICBjb25zb2xlLmxvZyhldmVudCk7XG5cbiAgfSxcblxuICAvLyDliKDpmaTpgInmi6nnmoREVFVcbiAgcm1EdHUoZXZlbnQ6IHZhbnRFdmVudCkge1xuICAgIGNvbnN0IGtleSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldC5rZXlcbiAgICB3eC5zaG93TW9kYWwoe1xuICAgICAgdGl0bGU6ICfliKDpmaRkdHUnLFxuICAgICAgY29udGVudDogYOehruWumuWIoOmZpGR0dToke2tleX0gPz9gLFxuICAgICAgc3VjY2VzczogKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLmNvbmZpcm0pIHtcbiAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgZHR1czogdGhpcy5kYXRhLmR0dXMuZmlsdGVyKGVsID0+IGVsICE9PSBrZXkpXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH0sXG5cbiAgLy8g6I635Y+W6IqC54K55YiX6KGoXG4gIGFzeW5jIGdldE5vZGVzKCkge1xuICAgIGNvbnN0IHsgYXJnIH0gPSBhd2FpdCBhcGkuZ2V0Tm9kZXMoKVxuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBub2RlczogYXJnLFxuICAgICAgcmFkaW86IGFyZ1swXS5OYW1lXG4gICAgfSlcbiAgfSxcbiAgLy8g5Y+Y5pu06YCJ5oup6IqC54K5XG4gIGNoYW5nZU5vZGUoZXZlbnQ6IHZhbnRFdmVudCkge1xuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICByYWRpbzogZXZlbnQuZGV0YWlsLFxuICAgIH0pO1xuICB9LFxuXG4gIC8vIOmAieaLqeiKgueCuVxuICBzZWxlY3ROb2RlKGV2ZW50OiB2YW50RXZlbnQpIHtcbiAgICBjb25zdCBpdGVtOiBOb2RlQ2xpZW50ID0gZXZlbnQuY3VycmVudFRhcmdldC5kYXRhc2V0Lml0ZW1cbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgcmFkaW86IGl0ZW0uTmFtZVxuICAgIH0pO1xuICB9LFxuICAvLyDmj5DkuqRcbiAgc3VibWl0KCkge1xuICAgIGNvbnN0IHsgZHR1cywgcmFkaW8gfSA9IHRoaXMuZGF0YVxuICAgIHd4LnNob3dNb2RhbCh7XG4gICAgICB0aXRsZTogJ+aPkOS6pOaguOWvuScsXG4gICAgICBjb250ZW50OiBg5pys5qyh5o+Q5Lqk55qEZHR15pWw55uuOiR7ZHR1cy5sZW5ndGh9LOaMgui9veeahOiKgueCueS4ujoke3JhZGlvfSxgLFxuICAgICAgc3VjY2VzczogYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCB7IG9rLCBtc2cgfSA9IGF3YWl0IGFwaS5iYWN0aFJlZ2lzdGVyRFRVKHJhZGlvLCBkdHVzKVxuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICB3eC5zaG93VG9hc3Qoe1xuICAgICAgICAgICAgdGl0bGU6ICfmj5DkuqTmiJDlip8nXG4gICAgICAgICAgfSlcbiAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgZHR1czogW10sXG4gICAgICAgICAgICBtYWM6ICcnXG4gICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3eC5zaG93TW9kYWwoe1xuICAgICAgICAgICAgdGl0bGU6ICfmj5DkuqTplJnor68nLFxuICAgICAgICAgICAgY29udGVudDogbXNnXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH1cbn0pIl19